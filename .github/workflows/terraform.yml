name: 'Terraform'

on:
  push:
    branches:
      - development
    paths:
      - 'infra/terraform/**'
      - 'README.md'
      - '.github/workflows/terraform.yml'

env:
  TF_LOG: INFO
  TF_INPUT: false

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest

    env:
      TFE_TOKEN: ${{ secrets.TFE_TOKEN }}
      TFE_ORG: ${{ secrets.TFE_ORG }}
      TF_WORKDIR: infra/terraform  # <--- reusable working directory path

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform login (non-interactive)
        env:
          TERRAFORM_TOKEN: ${{ secrets.TFE_TOKEN }}
        run: |
          mkdir -p ~/.terraform.d
          cat <<EOF > ~/.terraform.d/credentials.tfrc.json
          {
            "credentials": {
              "app.terraform.io": {
                "token": "${TERRAFORM_TOKEN}"
              }
            }
          }
          EOF
        working-directory: ${{ env.TF_WORKDIR }}

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: ${{ env.TF_WORKDIR }}

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check
        working-directory: ${{ env.TF_WORKDIR }}

      - name: Terraform Validate
        id: validate
        if: (success() || failure())
        run: terraform validate
        working-directory: ${{ env.TF_WORKDIR }}

      - name: Terraform Plan
        id: plan
        run: terraform plan -var="tfe_token=${{ secrets.TFE_TOKEN }}" -var="gh_pat=${{ secrets.GH_PAT }}" -var="organization=${{ secrets.TFE_ORG }}" -input=false -out=tfplan
        working-directory: ${{ env.TF_WORKDIR }}

      # - name: Terraform Apply
      #   id: apply
      #   run: terraform apply -var="tfe_token=${{ secrets.TFE_TOKEN }}" -var="gh_pat=${{ secrets.GH_PAT }}" -input=false -auto-approve tfplan
      #   working-directory: ${{ env.TF_WORKDIR }}
